{"version":3,"sources":["actions/contactAction.js","actions/types.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","reducers/contactReducer.js","reducers/index.js","store.js","App.js","registerServiceWorker.js","index.js"],"names":["addContact","contact","_ref3","Object","asyncToGenerator","regenerator_default","a","mark","_callee3","dispatch","res","wrap","_context3","prev","next","axios","post","sent","type","payload","data","stop","this","_x3","apply","arguments","Contact","state","showContactInfo","onDeleteClick","id","_this","props","deleteContact","_this2","_this$props$contact","name","email","phone","react_default","createElement","className","onClick","setState","style","cursor","float","color","bind","Link","to","concat","marginRight","Component","connect","_ref2","_callee2","_context2","delete","status","_x2","Contacts","getContacts","contacts","Fragment","map","contacts_Contact","key","_ref","_callee","_context","get","_x","TextInputGroup","label","value","placeholder","onChange","error","htmlFor","classnames","is-invalid","defaultProps","AddContact","errors","onSubmit","e","preventDefault","_this$state","newContact","history","push","defineProperty","target","_this$state2","layout_TextInputGroup","propTypes","PropTypes","func","isRequired","EditContact","updContact","editContact","nextProps","nextState","_nextProps$contactoEd","contactoEdit","match","params","getContact","_ref4","_callee4","_context4","put","_x4","Header","branding","href","About","NotFound","initialState","contacto","combineReducers","length","undefined","action","objectSpread","filter","toConsumableArray","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","App","es","BrowserRouter","layout_Header","Switch","Route","exact","path","component","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","fetch","response","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"oTAsBaA,EAAa,SAACC,GAAD,sBAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAa,SAAAC,EAAMC,GAAN,IAAAC,EAAA,OAAAL,EAAAC,EAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAClBC,IAAMC,KAAK,6CAA6Cf,GADtC,OAC9BS,EAD8BE,EAAAK,KAGnCR,EAAS,CACLS,KCxBmB,cDyBnBC,QAAST,EAAIU,OALkB,wBAAAR,EAAAS,SAAAb,EAAAc,SAAb,gBAAAC,GAAA,OAAArB,EAAAsB,MAAAF,KAAAG,YAAA,IEfpBC,6MACJC,MAAQ,CACNC,iBAAiB,KAGnBC,cAAgB,SAAAC,GACdC,EAAKC,MAAMC,cAAcH,4EAGlB,IAAAI,EAAAZ,KAAAa,EAC4Bb,KAAKU,MAAM/B,QAAtC6B,EADDK,EACCL,GAAIM,EADLD,EACKC,KAAMC,EADXF,EACWE,MAAOC,EADlBH,EACkBG,MACjBV,EAAoBN,KAAKK,MAAzBC,gBAER,OACEW,EAAAjC,EAAAkC,cAAA,OAAKC,UAAU,uBACbF,EAAAjC,EAAAkC,cAAA,UACGJ,EAAM,IACPG,EAAAjC,EAAAkC,cAAA,KACEE,QAAS,kBACPR,EAAKS,SAAS,CACZf,iBAAkBM,EAAKP,MAAMC,mBAGjCa,UAAU,mBACVG,MAAO,CAAEC,OAAQ,aAEnBN,EAAAjC,EAAAkC,cAAA,KACEC,UAAU,eACVG,MAAO,CAAEC,OAAQ,UAAWC,MAAO,QAASC,MAAO,OACnDL,QAASpB,KAAKO,cAAcmB,KAAK1B,KAAMQ,KAEzCS,EAAAjC,EAAAkC,cAACS,EAAA,EAAD,CAAMC,GAAE,gBAAAC,OAAkBrB,IACxBS,EAAAjC,EAAAkC,cAAA,KACEC,UAAU,oBACVG,MAAO,CACLC,OAAQ,UACRC,MAAO,QACPC,MAAO,QACPK,YAAa,YAKpBxB,EACCW,EAAAjC,EAAAkC,cAAA,MAAIC,UAAU,cACZF,EAAAjC,EAAAkC,cAAA,MAAIC,UAAU,mBAAd,UAAwCJ,GACxCE,EAAAjC,EAAAkC,cAAA,MAAIC,UAAU,mBAAd,UAAwCH,IAExC,aAhDUe,aA2DPC,cAAQ,KAAK,CAAErB,cFvDD,SAACH,GAAD,sBAAAyB,EAAApD,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAQ,SAAAiD,EAAM/C,GAAN,OAAAJ,EAAAC,EAAAK,KAAA,SAAA8C,GAAA,cAAAA,EAAA5C,KAAA4C,EAAA3C,MAAA,cAAA2C,EAAA3C,KAAA,EAEfC,IAAM2C,OAAN,8CAAAP,OAA2DrB,IAF5C,OAGf,MAHe2B,EAAAxC,KAG1B0C,QACHlD,EAAS,CACLS,KCfkB,iBDgBlBC,QAASW,IANgB,wBAAA2B,EAAApC,SAAAmC,EAAAlC,SAAR,gBAAAsC,GAAA,OAAAL,EAAA/B,MAAAF,KAAAG,YAAA,KEuDd6B,CAAgC5B,GC3DzCmC,8LAGFvC,KAAKU,MAAM8B,+CAGJ,IACCC,EAAazC,KAAKU,MAAlB+B,SACR,OACExB,EAAAjC,EAAAkC,cAACD,EAAAjC,EAAM0D,SAAP,KACEzB,EAAAjC,EAAAkC,cAAA,MAAIC,UAAU,kBACZF,EAAAjC,EAAAkC,cAAA,QAAMC,UAAU,eAAhB,WADF,SAGCsB,EAASE,IAAI,SAAAhE,GAAO,OACnBsC,EAAAjC,EAAAkC,cAAC0B,EAAD,CAASC,IAAKlE,EAAQ6B,GAAI7B,QAASA,cAdtBoD,aA+BRC,cALS,SAAC3B,GAAD,MAAY,CAClCoC,SAAUpC,EAAM1B,QAAQ8D,WAIa,CAAED,YHnCd,iCAAAM,EAAAjE,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAM,SAAA8D,EAAM5D,GAAN,IAAAC,EAAA,OAAAL,EAAAC,EAAAK,KAAA,SAAA2D,GAAA,cAAAA,EAAAzD,KAAAyD,EAAAxD,MAAA,cAAAwD,EAAAxD,KAAA,EACXC,IAAMwD,IAAI,8CADC,OACvB7D,EADuB4D,EAAArD,KAE7BR,EAAU,CACNS,KCNoB,eDOpBC,QAAST,EAAIU,OAJY,wBAAAkD,EAAAjD,SAAAgD,EAAA/C,SAAN,gBAAAkD,GAAA,OAAAJ,EAAA5C,MAAAF,KAAAG,YAAA,KGmCZ6B,CAAyCO,4BClClDY,EAAiB,SAAAL,GAQjB,IAPJM,EAOIN,EAPJM,MACAtC,EAMIgC,EANJhC,KACAuC,EAKIP,EALJO,MACAC,EAIIR,EAJJQ,YACA1D,EAGIkD,EAHJlD,KACA2D,EAEIT,EAFJS,SACAC,EACIV,EADJU,MAEA,OACEvC,EAAAjC,EAAAkC,cAAA,OAAKC,UAAU,cACbF,EAAAjC,EAAAkC,cAAA,SAAOuC,QAAS3C,GAAOsC,GACvBnC,EAAAjC,EAAAkC,cAAA,SACEtB,KAAMA,EACNkB,KAAMA,EACNK,UAAWuC,IAAW,+BAAgC,CACpDC,aAAcH,IAEhBF,YAAaA,EACbD,MAAOA,EACPE,SAAUA,IAEXC,GAASvC,EAAAjC,EAAAkC,cAAA,OAAKC,UAAU,oBAAoBqC,KAenDL,EAAeS,aAAe,CAC5BhE,KAAM,QAGOuD,wBCvCTU,6MACJxD,MAAQ,CACNS,KAAM,GACNC,MAAO,GACPC,MAAO,GACP8C,OAAQ,MAGVC,SAAW,SAACC,GACVA,EAAEC,iBADc,IAAAC,EAGezD,EAAKJ,MAA5BS,EAHQoD,EAGRpD,KAAMC,EAHEmD,EAGFnD,MAAOC,EAHLkD,EAGKlD,MAGrB,GAAa,KAATF,EAKJ,GAAc,KAAVC,EAKJ,GAAc,KAAVC,EAAJ,CAKA,IAAMmD,EAAa,CACjBrD,OACAC,QACAC,SAGFP,EAAKC,MAAMhC,WAAWyF,GAGtB1D,EAAKY,SAAS,CACZP,KAAM,GACNC,MAAO,GACPC,MAAO,GACP8C,OAAQ,KAGVrD,EAAKC,MAAM0D,QAAQC,KAAK,UApBtB5D,EAAKY,SAAS,CAAEyC,OAAQ,CAAE9C,MAAO,4BALjCP,EAAKY,SAAS,CAAEyC,OAAQ,CAAE/C,MAAO,4BALjCN,EAAKY,SAAS,CAAEyC,OAAQ,CAAEhD,KAAM,yBAiCpCyC,SAAW,SAAAS,GAAC,OAAIvD,EAAKY,SAALxC,OAAAyF,EAAA,EAAAzF,CAAA,GAAiBmF,EAAEO,OAAOzD,KAAOkD,EAAEO,OAAOlB,iFAEjD,IAAAmB,EACgCxE,KAAKK,MAApCS,EADD0D,EACC1D,KAAMC,EADPyD,EACOzD,MAAOC,EADdwD,EACcxD,MAAO8C,EADrBU,EACqBV,OAE5B,OACE7C,EAAAjC,EAAAkC,cAAA,OAAKC,UAAU,aACbF,EAAAjC,EAAAkC,cAAA,OAAKC,UAAU,eAAf,eACAF,EAAAjC,EAAAkC,cAAA,OAAKC,UAAU,aACbF,EAAAjC,EAAAkC,cAAA,QAAM6C,SAAU/D,KAAK+D,UACnB9C,EAAAjC,EAAAkC,cAACuD,EAAD,CACErB,MAAM,OACNtC,KAAK,OACLwC,YAAY,aACZD,MAAOvC,EACPyC,SAAUvD,KAAKuD,SACfC,MAAOM,EAAOhD,OAEhBG,EAAAjC,EAAAkC,cAACuD,EAAD,CACErB,MAAM,QACNtC,KAAK,QACLlB,KAAK,QACL0D,YAAY,cACZD,MAAOtC,EACPwC,SAAUvD,KAAKuD,SACfC,MAAOM,EAAO/C,QAEhBE,EAAAjC,EAAAkC,cAACuD,EAAD,CACErB,MAAM,QACNtC,KAAK,QACLwC,YAAY,cACZD,MAAOrC,EACPuC,SAAUvD,KAAKuD,SACfC,MAAOM,EAAO9C,QAEhBC,EAAAjC,EAAAkC,cAAA,SACEtB,KAAK,SACLyD,MAAM,cACNlC,UAAU,sCAtFCY,aA+FzBrD,EAAWgG,UAAY,CACrBhG,WAAYiG,IAAUC,KAAKC,YAGd7C,kBAAQ,KAAK,CAAEtD,cAAfsD,CAA6B6B,GCnGtCiB,6MACJzE,MAAQ,CACNS,KAAM,GACNC,MAAO,GACPC,MAAO,GACP8C,OAAQ,MAuBVC,SAAW,SAACC,GACVA,EAAEC,iBADc,IAAAC,EAGkBzD,EAAKJ,MAA/BS,EAHQoD,EAGRpD,KAAMC,EAHEmD,EAGFnD,MAAOC,EAHLkD,EAGKlD,MAAMR,EAHX0D,EAGW1D,GAG3B,GAAa,KAATM,EAKJ,GAAc,KAAVC,EAKJ,GAAc,KAAVC,EAAJ,CAKA,IAAM+D,EAAa,CACjBvE,KACAM,OACAC,QACAC,SAKHP,EAAKC,MAAMsE,YAAYD,GAGtBtE,EAAKY,SAAS,CACZP,KAAM,GACNC,MAAO,GACPC,MAAO,GACP8C,OAAQ,KAGVrD,EAAKC,MAAM0D,QAAQC,KAAK,UAvBtB5D,EAAKY,SAAS,CAAEyC,OAAQ,CAAE9C,MAAO,4BALjCP,EAAKY,SAAS,CAAEyC,OAAQ,CAAE/C,MAAO,4BALjCN,EAAKY,SAAS,CAAEyC,OAAQ,CAAEhD,KAAM,yBAoCpCyC,SAAW,SAAAS,GAAC,OAAIvD,EAAKY,SAALxC,OAAAyF,EAAA,EAAAzF,CAAA,GAAiBmF,EAAEO,OAAOzD,KAAOkD,EAAEO,OAAOlB,kGA/DhC4B,EAAWC,GAAU,IAAAC,EAGXF,EAAUG,aAAa,GAAjDtE,EAHqCqE,EAGrCrE,KAAMC,EAH+BoE,EAG/BpE,MAAOC,EAHwBmE,EAGxBnE,MAAMR,EAHkB2E,EAGlB3E,GAE3BR,KAAKqB,SAAS,CACZb,KACCM,OACAC,QACDC,sDAIe,IACTR,EAAOR,KAAKU,MAAM2E,MAAMC,OAAxB9E,GACRR,KAAKU,MAAM6E,WAAW/E,oCAkDf,IAAAgE,EAKgCxE,KAAKK,MAApCS,EALD0D,EAKC1D,KAAMC,EALPyD,EAKOzD,MAAOC,EALdwD,EAKcxD,MAAO8C,EALrBU,EAKqBV,OAE5B,OACE7C,EAAAjC,EAAAkC,cAAA,OAAKC,UAAU,aACbF,EAAAjC,EAAAkC,cAAA,OAAKC,UAAU,eAAf,gBACAF,EAAAjC,EAAAkC,cAAA,OAAKC,UAAU,aACbF,EAAAjC,EAAAkC,cAAA,QAAM6C,SAAU/D,KAAK+D,UACnB9C,EAAAjC,EAAAkC,cAACuD,EAAD,CACErB,MAAM,OACNtC,KAAK,OACLwC,YAAY,aACZD,MAAOvC,EACPyC,SAAUvD,KAAKuD,SACfC,MAAOM,EAAOhD,OAEhBG,EAAAjC,EAAAkC,cAACuD,EAAD,CACErB,MAAM,QACNtC,KAAK,QACLlB,KAAK,QACL0D,YAAY,cACZD,MAAOtC,EACPwC,SAAUvD,KAAKuD,SACfC,MAAOM,EAAO/C,QAEhBE,EAAAjC,EAAAkC,cAACuD,EAAD,CACErB,MAAM,QACNtC,KAAK,QACLwC,YAAY,cACZD,MAAOrC,EACPuC,SAAUvD,KAAKuD,SACfC,MAAOM,EAAO9C,QAEhBC,EAAAjC,EAAAkC,cAAA,SACEtB,KAAK,SACLyD,MAAM,iBACNlC,UAAU,sCAjHEY,aA8HXC,cAJS,SAAC3B,GAAD,MAAY,CAClC+E,aAAc/E,EAAM1B,QAAQyG,eAGS,CAAEG,WN5Ff,SAAC/E,GAAD,OAAQ,SAAArB,GAC7BA,EAAS,CACNS,KCtCmB,cDuCnBC,QAASW,MMyFoCwE,YNrG1B,SAACD,GAAD,sBAAAS,EAAA3G,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAgB,SAAAwG,EAAMtG,GAAN,OAAAJ,EAAAC,EAAAK,KAAA,SAAAqG,GAAA,cAAAA,EAAAnG,KAAAmG,EAAAlG,MAAA,cAAAkG,EAAAlG,KAAA,EACtBC,IAAMkG,IAAN,8CAAA9D,OAAwDkD,EAAWvE,IAAKuE,GADlD,OAAAW,EAAA/F,KAGxCR,EAAS,CACLS,KChCqB,eDiCrBC,QAASkF,IAL2B,wBAAAW,EAAA3F,SAAA0F,EAAAzF,SAAhB,gBAAA4F,GAAA,OAAAJ,EAAAtF,MAAAF,KAAAG,YAAA,KMqGZ6B,CAAqD8C,GChI9De,EAAS,SAAAnF,GAAS,IACdoF,EAAapF,EAAboF,SACR,OACE7E,EAAAjC,EAAAkC,cAAA,OAAKC,UAAU,2DACbF,EAAAjC,EAAAkC,cAAA,OAAKC,UAAU,aACbF,EAAAjC,EAAAkC,cAAA,KAAG6E,KAAK,IAAI5E,UAAU,gBACnB2E,GAEH7E,EAAAjC,EAAAkC,cAAA,WACED,EAAAjC,EAAAkC,cAAA,MAAIC,UAAU,sBACZF,EAAAjC,EAAAkC,cAAA,MAAIC,UAAU,YACZF,EAAAjC,EAAAkC,cAACS,EAAA,EAAD,CAAMC,GAAG,IAAIT,UAAU,YACrBF,EAAAjC,EAAAkC,cAAA,KAAGC,UAAU,gBADf,UAIFF,EAAAjC,EAAAkC,cAAA,MAAIC,UAAU,YACZF,EAAAjC,EAAAkC,cAACS,EAAA,EAAD,CAAMC,GAAG,eAAeT,UAAU,YAChCF,EAAAjC,EAAAkC,cAAA,KAAGC,UAAU,gBADf,SAIFF,EAAAjC,EAAAkC,cAAA,MAAIC,UAAU,YACZF,EAAAjC,EAAAkC,cAACS,EAAA,EAAD,CAAMC,GAAG,SAAST,UAAU,YAC1BF,EAAAjC,EAAAkC,cAAA,KAAGC,UAAU,oBADf,gBAWd0E,EAAOjC,aAAe,CACpBkC,SAAU,UAOGD,QC1CAG,EAAA,WACb,OACE/E,EAAAjC,EAAAkC,cAAA,WACED,EAAAjC,EAAAkC,cAAA,MAAIC,UAAU,aAAd,yBACAF,EAAAjC,EAAAkC,cAAA,KAAGC,UAAU,QAAb,iCACAF,EAAAjC,EAAAkC,cAAA,KAAGC,UAAU,kBAAb,mBCLS8E,EAAA,WACb,OACEhF,EAAAjC,EAAAkC,cAAA,WACED,EAAAjC,EAAAkC,cAAA,MAAIC,UAAU,aACZF,EAAAjC,EAAAkC,cAAA,QAAMC,UAAU,eAAhB,OADF,mBAGAF,EAAAjC,EAAAkC,cAAA,KAAGC,UAAU,QAAb,qECNA+E,EAAe,CACjBzD,SAAU,GACV0D,SAAU,ICDCC,cAAgB,CAC3BzH,QDGW,WAAuC,IAA9B0B,EAA8BF,UAAAkG,OAAA,QAAAC,IAAAnG,UAAA,GAAAA,UAAA,GAAtB+F,EAAcK,EAAQpG,UAAAkG,OAAA,EAAAlG,UAAA,QAAAmG,EAClD,OAAOC,EAAO3G,MACV,ITToB,eSUpB,OAAOf,OAAA2H,EAAA,EAAA3H,CAAA,GACAwB,EADP,CAEIoC,SAAW8D,EAAO1G,UAGtB,ITdsB,iBSepB,OAAOhB,OAAA2H,EAAA,EAAA3H,CAAA,GACFwB,EADL,CAEEoC,SAAUpC,EAAMoC,SAASgE,OAAO,SAAA9H,GAAO,OACrCA,EAAQ6B,KAAO+F,EAAO1G,YAG1B,ITpBiB,cSqBjB,OAAOhB,OAAA2H,EAAA,EAAA3H,CAAA,GACFwB,EADL,CAEEoC,SAAQ,CAAG8D,EAAO1G,SAAVgC,OAAAhD,OAAA6H,EAAA,EAAA7H,CAAsBwB,EAAMoC,aAEtC,ITvBiB,cSwBjB,OAAO5D,OAAA2H,EAAA,EAAA3H,CAAA,GACFwB,EADL,CAEE+E,aAAe/E,EAAMoC,SAASgE,OAAO,SAAA9H,GAAO,OAC1CA,EAAQ6B,IAAM+F,EAAO1G,YAEzB,IT9BkB,eS+BlB,OAAAhB,OAAA2H,EAAA,EAAA3H,CAAA,GACKwB,EADL,CAEEoC,SAAUpC,EAAMoC,SAASE,IAAI,SAAAhE,GAAO,OAClCA,EAAQ6B,KAAO+F,EAAO1G,QAAQW,GAAK7B,EAAU4H,EAAO1G,QAAUlB,MAEpE,QACA,OAAO0B,MElCTsG,EAAa,CAACC,KAULC,EARDC,YACVC,EALiB,GAOjBC,YACIC,IAAe/G,WAAf,EAAmByG,GAC3BO,OAAOC,8BACPD,OAAOC,iCCwBQC,gMArBX,OACEnG,EAAAjC,EAAAkC,cAACmG,EAAA,EAAD,CAAUR,MAAOA,GACb5F,EAAAjC,EAAAkC,cAACoG,EAAA,EAAD,KACErG,EAAAjC,EAAAkC,cAAA,OAAKC,UAAU,OACbF,EAAAjC,EAAAkC,cAACqG,EAAD,CAAQzB,SAAS,oBACjB7E,EAAAjC,EAAAkC,cAAA,OAAKC,UAAU,aACbF,EAAAjC,EAAAkC,cAACsG,EAAA,EAAD,KACEvG,EAAAjC,EAAAkC,cAACuG,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWrF,IACjCtB,EAAAjC,EAAAkC,cAACuG,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,eAAeC,UAAW/D,IAC5C5C,EAAAjC,EAAAkC,cAACuG,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,oBAAoBC,UAAW9C,IACjD7D,EAAAjC,EAAAkC,cAACuG,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,UAAW5B,IACtC/E,EAAAjC,EAAAkC,cAACuG,EAAA,EAAD,CAAOG,UAAW3B,gBAblBlE,cCLZ8F,EAAcC,QACW,cAA7BZ,OAAOa,SAASC,UAEe,UAA7Bd,OAAOa,SAASC,UAEhBd,OAAOa,SAASC,SAAS3C,MACvB,2DAsCN,SAAS4C,EAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTI,KAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBpI,QACf8H,UAAUC,cAAcQ,WAK1BC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,2CAMrBC,MAAM,SAAAvF,GACLqF,QAAQrF,MAAM,4CAA6CA,KC1EjEwF,IAASC,OAAOhI,EAAAjC,EAAAkC,cAACgI,EAAD,MAASC,SAASC,eAAe,SDelC,WACb,GAA6C,kBAAmBjB,UAAW,CAGzE,GADkB,IAAIkB,IAAIC,GAAwBpC,OAAOa,UAC3CwB,SAAWrC,OAAOa,SAASwB,OAIvC,OAGFrC,OAAOsC,iBAAiB,OAAQ,WAC9B,IAAMtB,EAAK,GAAArG,OAAMyH,GAAN,sBAEPzB,GAiDV,SAAiCK,GAE/BuB,MAAMvB,GACHI,KAAK,SAAAoB,GAGkB,MAApBA,EAASrH,SACuD,IAAhEqH,EAASC,QAAQ1G,IAAI,gBAAgB2G,QAAQ,cAG7CzB,UAAUC,cAAcyB,MAAMvB,KAAK,SAAAC,GACjCA,EAAauB,aAAaxB,KAAK,WAC7BpB,OAAOa,SAASgC,aAKpB9B,EAAgBC,KAGnBa,MAAM,WACLF,QAAQC,IACN,mEArEAkB,CAAwB9B,GAIxBC,UAAUC,cAAcyB,MAAMvB,KAAK,WACjCO,QAAQC,IACN,+GAMJb,EAAgBC,MC1CxB+B","file":"static/js/main.4149a754.chunk.js","sourcesContent":["import { GET_CONTACTS, ADD_CONTACT, DELETE_CONTACT, EDIT_CONTACT, GET_CONTACT } from './types';\nimport axios from 'axios';\n\nexport const getContacts = () => async dispatch => {\n    const res = await axios.get('https://jsonplaceholder.typicode.com/users');\n    dispatch ({\n        type: GET_CONTACTS,\n        payload: res.data\n    });\n};\n\nexport const deleteContact = (id) => async dispatch => {\n\n    const res = await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n    if(res.status === 200 ){\n        dispatch({\n            type: DELETE_CONTACT,\n            payload: id\n        })\n    }\n};\n\nexport const addContact = (contact) => async dispatch => {\n   const res = await axios.post(\"https://jsonplaceholder.typicode.com/users\",contact);\n\n    dispatch({\n        type: ADD_CONTACT,\n        payload: res.data\n    })\n};\n\nexport const editContact = (updContact) => async dispatch => {\n   const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${updContact.id}`,updContact);\n   \n   dispatch({\n       type: EDIT_CONTACT,\n       payload: updContact\n   })\n}\n\nexport const getContact = (id) => dispatch => {\n     dispatch({\n        type: GET_CONTACT,\n        payload: id\n    })\n}\n","export const GET_CONTACTS = 'GET_CONTACTS';\nexport const DELETE_CONTACT = 'DELETE_CONTACT';\nexport const ADD_CONTACT = 'ADD_CONTACT';\nexport const EDIT_CONTACT = 'EDIT_CONTACT';\nexport const GET_CONTACT = 'GET_CONTACT';","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { deleteContact } from '../../actions/contactAction';\n\n\nclass Contact extends Component {\n  state = {\n    showContactInfo: false\n  };\n\n  onDeleteClick = id => {\n    this.props.deleteContact(id);\n  };\n\n  render() {\n    const { id, name, email, phone } = this.props.contact;\n    const { showContactInfo } = this.state;\n\n    return (\n      <div className=\"card card-body mb-3\">\n        <h4>\n          {name}{' '}\n          <i\n            onClick={() =>\n              this.setState({\n                showContactInfo: !this.state.showContactInfo\n              })\n            }\n            className=\"fas fa-sort-down\"\n            style={{ cursor: 'pointer' }}\n          />\n          <i\n            className=\"fas fa-times\"\n            style={{ cursor: 'pointer', float: 'right', color: 'red' }}\n            onClick={this.onDeleteClick.bind(this, id)}\n          />\n          <Link to={`contact/edit/${id}`}>\n            <i\n              className=\"fas fa-pencil-alt\"\n              style={{\n                cursor: 'pointer',\n                float: 'right',\n                color: 'black',\n                marginRight: '1rem'\n              }}\n            />\n          </Link>\n        </h4>\n        {showContactInfo ? (\n          <ul className=\"list-group\">\n            <li className=\"list-group-item\">Email: {email}</li>\n            <li className=\"list-group-item\">Phone: {phone}</li>\n          </ul>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n\nexport default connect(null,{ deleteContact })(Contact);\n","import React, { Component } from 'react';\nimport Contact from './Contact';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getContacts } from '../../actions/contactAction';\n\n\nclass Contacts extends Component {\n\n  componentDidMount(){\n    this.props.getContacts();\n  }\n\n  render() {\n    const { contacts } = this.props;\n    return (\n      <React.Fragment>\n        <h1 className=\"display-4 mb-2\">\n          <span className=\"text-danger\">Contact</span> List\n        </h1>\n        {contacts.map(contact => (\n          <Contact key={contact.id} contact={contact} />\n        ))}\n      </React.Fragment>\n    );\n  }\n}\n\nContacts.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  getContacts: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n  contacts: state.contact.contacts\n})\n\n\nexport default connect(mapStateToProps,{ getContacts })(Contacts);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        type={type}\n        name={name}\n        className={classnames('form-control form-control-lg', {\n          'is-invalid': error\n        })}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n      />\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\n\nTextInputGroup.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string\n};\n\nTextInputGroup.defaultProps = {\n  type: 'text'\n};\n\nexport default TextInputGroup;\n","import React, { Component } from 'react';\nimport TextInputGroup from '../layout/TextInputGroup';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addContact } from '../../actions/contactAction';\n\nclass AddContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {}\n  };\n\n  onSubmit = (e) => {\n    e.preventDefault();\n\n    const { name, email, phone } = this.state;\n\n    // Check For Errors\n    if (name === '') {\n      this.setState({ errors: { name: 'Name is required' } });\n      return;\n    }\n\n    if (email === '') {\n      this.setState({ errors: { email: 'Email is required' } });\n      return;\n    }\n\n    if (phone === '') {\n      this.setState({ errors: { phone: 'Phone is required' } });\n      return;\n    }\n\n    const newContact = {\n      name,\n      email,\n      phone\n    };\n\n    this.props.addContact(newContact);\n\n    // Clear State\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n    });\n\n    this.props.history.push('/');\n  };\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <div className=\"card mb-3\">\n        <div className=\"card-header\">Add Contact</div>\n        <div className=\"card-body\">\n          <form onSubmit={this.onSubmit}>\n            <TextInputGroup\n              label=\"Name\"\n              name=\"name\"\n              placeholder=\"Enter Name\"\n              value={name}\n              onChange={this.onChange}\n              error={errors.name}\n            />\n            <TextInputGroup\n              label=\"Email\"\n              name=\"email\"\n              type=\"email\"\n              placeholder=\"Enter Email\"\n              value={email}\n              onChange={this.onChange}\n              error={errors.email}\n            />\n            <TextInputGroup\n              label=\"Phone\"\n              name=\"phone\"\n              placeholder=\"Enter Phone\"\n              value={phone}\n              onChange={this.onChange}\n              error={errors.phone}\n            />\n            <input\n              type=\"submit\"\n              value=\"Add Contact\"\n              className=\"btn btn-light btn-block\"\n            />\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\naddContact.propTypes = {\n  addContact: PropTypes.func.isRequired,\n}\n\nexport default connect(null,{ addContact })(AddContact);\n","import React, { Component } from 'react';\nimport TextInputGroup from '../layout/TextInputGroup';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { editContact, getContact } from '../../actions/contactAction';\n\nclass EditContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {}\n  };\n  \n  componentWillReceiveProps(nextProps, nextState){\n    // console.log(nextProps.contactoEdit[0].name);\n    // const { username } = nextProps.contactoEdit[0];\n    const { name, email, phone,id } = nextProps.contactoEdit[0];\n\n    this.setState({\n      id,\n       name,\n       email,\n      phone\n    });\n  }\n\n  componentDidMount(){\n    const { id } = this.props.match.params;\n    this.props.getContact(id);\n  }\n\n  \n\n  onSubmit = (e) => {\n    e.preventDefault();\n\n    const { name, email, phone,id } = this.state;\n\n    // Check For Errors\n    if (name === '') {\n      this.setState({ errors: { name: 'Name is required' } });\n      return;\n    }\n\n    if (email === '') {\n      this.setState({ errors: { email: 'Email is required' } });\n      return;\n    }\n\n    if (phone === '') {\n      this.setState({ errors: { phone: 'Phone is required' } });\n      return;\n    }\n\n    const updContact = {\n      id,\n      name,\n      email,\n      phone\n    };\n\n    \n\n   this.props.editContact(updContact);\n\n    // Clear State\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n    });\n\n    this.props.history.push('/');\n  };\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    // const { contactoEdit } = this.props;\n    // console.log(this.props);\n    \n\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <div className=\"card mb-3\">\n        <div className=\"card-header\">Edit Contact</div>\n        <div className=\"card-body\">\n          <form onSubmit={this.onSubmit}>\n            <TextInputGroup\n              label=\"Name\"\n              name=\"name\"\n              placeholder=\"Enter Name\"\n              value={name}\n              onChange={this.onChange}\n              error={errors.name}\n            />\n            <TextInputGroup\n              label=\"Email\"\n              name=\"email\"\n              type=\"email\"\n              placeholder=\"Enter Email\"\n              value={email}\n              onChange={this.onChange}\n              error={errors.email}\n            />\n            <TextInputGroup\n              label=\"Phone\"\n              name=\"phone\"\n              placeholder=\"Enter Phone\"\n              value={phone}\n              onChange={this.onChange}\n              error={errors.phone}\n            />\n            <input\n              type=\"submit\"\n              value=\"Update Contact\"\n              className=\"btn btn-light btn-block\"\n            />\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  contactoEdit: state.contact.contactoEdit\n})\n\nexport default connect(mapStateToProps,{ getContact, editContact })(EditContact);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst Header = props => {\n  const { branding } = props;\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n      <div className=\"container\">\n        <a href=\"/\" className=\"navbar-brand\">\n          {branding}\n        </a>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                <i className=\"fas fa-home\" /> Home\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/contact/add\" className=\"nav-link\">\n                <i className=\"fas fa-plus\" /> Add\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/about\" className=\"nav-link\">\n                <i className=\"fas fa-question\" /> About\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nHeader.defaultProps = {\n  branding: 'My App'\n};\n\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired\n};\n\nexport default Header;\n","import React from 'react';\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">About Contact Manager</h1>\n      <p className=\"lead\">Simple app to manage contacts</p>\n      <p className=\"text-secondary\">Version 1.0.0</p>\n    </div>\n  );\n};\n","import React from 'react';\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">\n        <span className=\"text-danger\">404</span> Page Not Found\n      </h1>\n      <p className=\"lead\">Sorry, that page does not exist</p>\n    </div>\n  );\n};\n","import { GET_CONTACTS, ADD_CONTACT, DELETE_CONTACT, GET_CONTACT, EDIT_CONTACT } from '../actions/types';\n\nconst initialState = {\n    contacts: [],\n    contacto: {}\n};\n\nexport default function(state = initialState, action) {\n    switch(action.type){\n        case GET_CONTACTS:\n        return {\n            ...state,\n            contacts : action.payload,\n        };\n\n        case DELETE_CONTACT:\n          return {\n            ...state,\n            contacts: state.contacts.filter(contact =>\n              contact.id !== action.payload)\n          }\n\n          case ADD_CONTACT:\n          return {\n            ...state,\n            contacts: [action.payload, ...state.contacts]\n          }\n          case GET_CONTACT:\n          return {\n            ...state,\n            contactoEdit:  state.contacts.filter(contact =>\n              contact.id == action.payload)\n          }\n          case EDIT_CONTACT:\n          return{\n            ...state,\n            contacts: state.contacts.map(contact =>\n              contact.id === action.payload.id ? contact = action.payload : contact)\n          }\n        default:\n        return state;\n    }\n}","import { combineReducers } from 'redux';\nimport contactReducer from './contactReducer';\n\nexport default combineReducers({\n    contact: contactReducer\n})","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/index.js';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n    rootReducer,\n    initialState,\n    compose(\n        applyMiddleware(...middleware),\nwindow.__REDUX_DEVTOOLS_EXTENSION__ && \nwindow.__REDUX_DEVTOOLS_EXTENSION__()));\n\nexport default store;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Contacts from './components/contacts/Contacts';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\n\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n          <Router>\n            <div className=\"App\">\n              <Header branding=\"Contact Manager\" />\n              <div className=\"container\">\n                <Switch>\n                  <Route exact path=\"/\" component={Contacts} />\n                  <Route exact path=\"/contact/add\" component={AddContact} />\n                  <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                  <Route exact path=\"/about\" component={About} />\n                  <Route component={NotFound} />\n                </Switch>\n              </div>\n            </div>\n          </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}